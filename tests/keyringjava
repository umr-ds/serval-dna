#!/bin/bash

# Tests for Keyring Java API.
#
# Copyright 2015 Serval Project Inc.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

source "${0%/*}/../testframework.sh"
source "${0%/*}/../testdefs.sh"
source "${0%/*}/../testdefs_java.sh"

setup() {
   setup_servald
   setup_servald_so
   compile_java_classes
   set_instance +A
   set_keyring_config
   set_extra_config
   if [ -z "$IDENTITY_COUNT" ]; then
      create_single_identity
   else
      create_identities $IDENTITY_COUNT
   fi
   export SERVALD_RHIZOME_DB_RETRY_LIMIT_MS=60000
   start_servald_server
   wait_until servald_restful_http_server_started +A
   get_servald_restful_http_server_port PORTA +A
}

teardown() {
   stop_all_servald_servers
   kill_all_servald_processes
   assert_no_servald_processes
   report_all_servald_servers
}

set_keyring_config() {
   executeOk_servald config \
      set log.console.level debug \
      set debug.httpd on \
      set debug.keyring on \
      set debug.verbose on
}

set_extra_config() {
   :
}

doc_keyringList="Java API list keyring identities"
setup_keyringList() {
   IDENTITY_COUNT=10
   DIDA1=123123123
   NAMEA1='Joe Bloggs'
   DIDA5=567567567
   setup
}
test_keyringList() {
   executeJavaOk org.servalproject.test.Keyring list-identities
   tfw_cat --stdout --stderr
   assertStdoutLineCount == $IDENTITY_COUNT
   # TODO: these tests only work because the listed order of identities is the
   # order of creation, which makes locked identities easy to attack.  When the
   # random search TODO in keyring.c:find_free_slot() is done, then these tests
   # should fail.
   for ((n = 1; n != IDENTITY_COUNT + 1; ++n)); do
      line="$(sed -n -e ${n}p "$TFWSTDOUT")"
      unset_vars_with_prefix XX_
      unpack_vars XX_ "$line"
      local sidvar=SIDA$n
      local didvar=DIDA$n
      local namevar=NAMEA$n
      assert [ "$XX_sid" = "${!sidvar}" ]
      assert [ "$XX_did" = "${!didvar-null}" ]
      assert [ "$XX_name" = "${!namevar-null}" ]
   done
}

doc_keyringListPin="Java API list keyring identities, with PIN"
setup_keyringListPin() {
   IDENTITY_COUNT=3
   PINA1='wif waf'
   setup
}
test_keyringListPin() {
   # First, list without supplying the PIN
   executeJavaOk org.servalproject.test.Keyring list-identities
   tfw_cat --stdout --stderr
   assertStdoutLineCount == $((IDENTITY_COUNT - 1))
   assertStdoutGrep --matches=0 "sid=$SIDA1"
   assertStdoutGrep --matches=1 "sid=$SIDA2"
   assertStdoutGrep --matches=1 "sid=$SIDA3"
   # Then, list supplying the PIN
   executeJavaOk org.servalproject.test.Keyring list-identities "$PINA1"
   tfw_cat --stdout --stderr
   assertStdoutLineCount == $IDENTITY_COUNT
   assertStdoutGrep --matches=1 "sid=$SIDA1"
   assertStdoutGrep --matches=1 "sid=$SIDA2"
   assertStdoutGrep --matches=1 "sid=$SIDA3"
}

doc_keyringSetDidName="Java API set DID and name"
setup_keyringSetDidName() {
   IDENTITY_COUNT=2
   setup
}
test_keyringSetDidName() {
   executeJavaOk org.servalproject.test.Keyring set "$SIDA1" 987654321 'Joe Bloggs'
   tfw_cat --stdout --stderr
   assertStdoutGrep --matches=1 "sid=$SIDA1, did=987654321, name=Joe Bloggs$"
   executeOk_servald keyring list
   assert_keyring_list 2
   assertStdoutGrep --stderr --matches=1 "^$SIDA1:987654321:Joe Bloggs\$"
}

runTests "$@"
